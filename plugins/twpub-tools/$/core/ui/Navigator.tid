title: $:/core/ui/Navigator

\define tv-action-refresh-policy() always

\define generic-handler()
<$vars storyConfigurationTiddler={{{ [<event-paramObject-storyConfigurationTiddler>!is[blank]] ~[all[shadows+tiddlers]tag[$:/tags/Story]] }}} >
	<$vars storyDefinitionTiddler={{{ [<storyConfigurationTiddler>get[story-definition]] }}}>
<$action-log message="In navigator generic-handler"/>
<$action-log/>
		<$importvariables filter={{{ [<storyDefinitionTiddler>get[imports]] }}}>
			<$importvariables filter=<<storyDefinitionTiddler>>>
				<$transclude tiddler=<<storyDefinitionTiddler>> field=<<event-type>>/>
			</$importvariables>
		</$importvariables>
	</$vars>
</$vars>
\end

\define navigate-handler()
<!--

Traps navigate events within the story river

-->
<$let
	event-paramObject-shiftKey={{{ [<event-shiftKey>!is[blank]else<event-paramObject-shiftKey>] }}}
	event-paramObject-altKey={{{ [<event-altKey>!is[blank]else<event-paramObject-altKey>] }}}
	event-paramObject-var-currentTiddler={{{ [<event-navigateTo>!is[blank]else<event-paramObject-var-currentTiddler>] }}}
>
<$let
	defaultStoryConfigurationTiddler={{{ [<event-paramObject-var-currentTiddler>]  :cascade[all[shadows+tiddlers]tag[$:/tags/DefaultStoryFilter]get[text]] }}}
	storyConfigurationTiddler={{{ [<event-paramObject-storyConfigurationTiddler>!is[blank]] ~[<defaultStoryConfigurationTiddler>] }}}
	event-paramObject-navigateFromClientLeft={{{ [<event-navigateFromClientLeft>!is[blank]else<event-paramObject-navigateFromClientLeft>] }}}
	event-paramObject-navigateFromClientTop={{{ [<event-navigateFromClientTop>!is[blank]else<event-paramObject-navigateFromClientTop>] }}}
	event-paramObject-navigateFromClientWidth={{{ [<event-navigateFromClientWidth>!is[blank]else<event-paramObject-navigateFromClientWidth>] }}}
	event-paramObject-navigateFromClientHeight={{{ [<event-navigateFromClientHeight>!is[blank]else<event-paramObject-navigateFromClientHeight>] }}}
	storyDefinitionTiddler={{{ [<storyConfigurationTiddler>get[story-definition]] }}}
>
<$action-log message="In navigate-handler"/>
<$action-log/>
	<$list filter="[<event-paramObject-shiftKey>!match[true]]" variable="ignore">
		<$importvariables filter={{{ [<storyDefinitionTiddler>get[imports]] }}}>
			<$importvariables filter=<<storyDefinitionTiddler>>>
				<$transclude tiddler=<<storyDefinitionTiddler>> field=<<event-type>>/>
			</$importvariables>
		</$importvariables>
	</$list>
	<$list filter="[<event-paramObject-shiftKey>match[true]]" variable="ignore">
		<$action-setmultiplefields $tiddler={{{ [[$:/state/navigation-popup/]addsuffix<storyConfigurationTiddler>] }}} $fields="[variables[]removeprefix[event-paramObject-]addprefix[var-]]" $values="[variables[]prefix[event-paramObject-]getvariable[]]"/>
		<$action-popup $state={{{ [[$:/state/navigation-popup/]addsuffix<storyConfigurationTiddler>] }}} $coords={{{ =[[(]] =[<event-paramObject-navigateFromClientLeft>] =[[,]] =[<event-paramObject-navigateFromClientTop>] =[[,]] =[<event-paramObject-navigateFromClientWidth>] =[[,]] =[<event-paramObject-navigateFromClientHeight>] =[[)]] +[join[]] }}}/>
		<$action-log $state={{{ [[$:/state/navigation-popup/]addsuffix<storyConfigurationTiddler>] }}} $coords={{{ =[[(]] =[<event-paramObject-navigateFromClientLeft>] =[[,]] =[<event-paramObject-navigateFromClientTop>] =[[,]] =[<event-paramObject-navigateFromClientWidth>] =[[,]] =[<event-paramObject-navigateFromClientHeight>] =[[)]] +[join[]] }}}/>
	</$list>
</$let>
</$let>
\end

\define navigation-popup-actions()
<!--

Handles clicks within the navigation popup menu

-->
<$vars storyConfigurationTiddler=<<currentTiddler>>>
	<$vars storyDefinitionTiddler={{{ [<storyConfigurationTiddler>get[story-definition]] }}}>
		<$importvariables filter={{{ [<storyDefinitionTiddler>get[imports]] }}}>
			<$importvariables filter=<<storyDefinitionTiddler>>>
				<$transclude tiddler=<<storyDefinitionTiddler>> field="tm-navigate"/>
			</$importvariables>
		</$importvariables>
	</$vars>
</$vars>
\end

\define navigation-popup()
<!--

Renders the navigation popup menu

-->
<$vars stateTitle={{{ [[$:/state/navigation-popup/]addsuffix<storyConfigurationTiddler>] }}}>
	<$setmultiplevariables $names="[<stateTitle>fields[]removeprefix[var-]addprefix[event-paramObject-]]" $values="[<stateTitle>fields[]prefix[var-]]  :map[<stateTitle>get<currentTiddler>]">
		<$reveal state=<<stateTitle>> type="popup" tag="div" class="tc-link-popup" position="below" updatePopupPosition="yes" animate="yes">
			<div class="tc-drop-down">
				Navigating to:<$text text=<<event-paramObject-var-currentTiddler>>/>
				<$list filter="[all[shadows+tiddlers]tag[$:/tags/Story]sort[caption]]">
					<$button class="tc-btn-invisible" actions=<<navigation-popup-actions>>>
						<$text text={{!!caption}}/>
					</$button>
				</$list>
				<hr>
				<div style="border:1px solid black;padding: 1em;max-width: 300px;max-height: 300px;overflow:auto;">
					<$transclude tiddler=<<event-paramObject-var-currentTiddler>> mode="block"/>
				</div>
			</div>
		</$reveal>
	</$setmultiplevariables>
</$vars>
\end

<$let tv-action-refresh-policy="once">
	<$messagecatcher
		$tm-navigate=<<navigate-handler>>
		$tm-close-tiddler=<<generic-handler>>
		$tm-edit-tiddler=<<generic-handler>>
		$tm-save-tiddler=<<generic-handler>>
		$tm-cancel-tiddler=<<generic-handler>>
		$tm-save-tiddler=<<generic-handler>>
	>
		<<body>>
	</$messagecatcher>
</$let>
